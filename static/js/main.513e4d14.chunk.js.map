{"version":3,"sources":["services/user.service.js","store/action/alert.action.js","store/action/user.action.js","features/login/LoginPage.js","App.js","store/reducers/auth.reducer.js","store/reducers/root.reducer.js","store/reducers/alert.reduser.js","store/reducers/user.reducer.js","store/store.js","index.js"],"names":["url","userService","login","user","password","requestOptions","method","headers","Content-Type","body","JSON","stringify","fetch","concat","then","handleResponse","console","log","message","token","localStorage","setItem","logout","removeItem","response","text","data","parse","ok","status","error","statusText","Promise","reject","alertConstants","SUCCESS","ERROR","CLEAR","alertActions","success","type","userConstants","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","GETALL_REQUEST","GETALL_SUCCESS","GETALL_FAILURE","userActions","dispatch","request","failure","LoginPageComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","submitted","handleChange","bind","assertThisInitialized","handleSubmit","e","_e$target","target","name","value","setState","defineProperty","preventDefault","_this$state","alert","_this$state2","react_default","a","createElement","className","onSubmit","placeholder","onChange","href","React","Component","LoginPage","connect","App","_Component","apply","arguments","inherits","createClass","key","getItem","initialState","loggedIn","rootReducer","combineReducers","length","undefined","action","authentication","loggingIn","users","loading","items","loggerMiddleware","createLogger","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.513e4d14.chunk.js","sourcesContent":["import { authHeader } from '../helpers/auth-header';\n\nconst url = 'https://flatearth-api.herokuapp.com/api/v1/auth';\n\nexport const userService = {\n    login,\n    logout,\n};\n\nfunction login(user, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ user, password })\n    };\n\n    return fetch(`${url}/login`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            console.log('data', user)\n            // login successful if there's a jwt token in the response\n            if (user.message.token) {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(user.message));\n            }\n\n            return user.message;\n        });\n}\n\nfunction logout() {\n    // remove user from local storage to log user out\n    localStorage.removeItem('user');\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${url}/secret`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // auto logout if 401 response returned from api\n                logout();\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}","export const alertConstants = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'ALERT_ERROR',\n    CLEAR: 'ALERT_CLEAR'\n};\n\nexport const alertActions = {\n    success,\n    error,\n};\n\nfunction success(message) {\n    return { type: alertConstants.SUCCESS, message };\n}\n\nfunction error(message) {\n    return { type: alertConstants.ERROR, message };\n}\n","import { userService } from '../../services/user.service';\nimport { alertActions } from './alert.action';\n\nexport const userConstants = {\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\n\n    LOGOUT: 'USERS_LOGOUT',\n\n    GETALL_REQUEST: 'USERS_GETALL_REQUEST',\n    GETALL_SUCCESS: 'USERS_GETALL_SUCCESS',\n    GETALL_FAILURE: 'USERS_GETALL_FAILURE'\n};\n\nexport const userActions = {\n    login,\n    logout,\n};\n\nfunction login(user, password) {\n    return dispatch => {\n        dispatch(request({ user }));\n\n        userService.login(user, password)\n            .then(\n                user => {\n                    dispatch(success(user));\n                    dispatch(alertActions.success(\"ALERT_SUCCESS\"));\n                },\n                error => {\n                    dispatch(failure(error));\n                    dispatch(alertActions.error(error));\n                }\n            );\n    };\n\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, user } }\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, user } }\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, error } }\n}\n\nfunction logout() {\n    userService.logout();\n    return { type: userConstants.LOGOUT };\n}\n\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { userActions } from '../../store/action/user.action';\n\nimport './login-page.css';\n\nclass LoginPageComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // reset login status\n        this.props.dispatch(userActions.logout());\n\n        this.state = {\n            user: '',\n            password: '',\n            submitted: false\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        const { name, value } = e.target;\n        this.setState({ [name]: value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        this.setState({ submitted: true });\n        const { user, password } = this.state;\n        const { dispatch } = this.props;\n        if (user && password) {\n            dispatch(userActions.login(user, password));\n        }\n    }\n\n    render() {\n        const { alert } = this.props;\n        const { user, password, submitted } = this.state;\n        return (\n            <div className=\"Sign-in\">\n                <span><b>Bank</b> Support Portal</span>\n                <form name=\"form\" onSubmit={this.handleSubmit}>\n                    <div className={'form-group' + (submitted && !user ? ' has-error' : '')}>\n                        <input type=\"text\" className=\"form-control\" name=\"user\" value={user} placeholder=\"Username\" onChange={this.handleChange} />\n                        {submitted && !user &&\n                        <div className=\"help-block\">Введите username</div>\n                        }\n                        {alert.message === `No such User ${this.state.user}` &&\n                        <div className={`alert ${alert.type}`}>Invalid username</div>\n                        }\n                        {alert.type === 'alert-success' &&\n                        <div className={`alert ${alert.type}`}> </div>\n                        }\n                    </div>\n                    <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} placeholder=\"Password\" onChange={this.handleChange}/>\n                        {submitted && !password &&\n                        <div className=\"help-block\">Ведите пароль</div>\n                        }\n                        {alert.message === 'password is incorrect' &&\n                        <div className={`alert ${alert.type}`}>{alert.message}</div>\n                        }\n                        {alert.type === 'alert-success' &&\n                        <div className={`alert ${alert.type}`}> </div>\n                        }\n                    </div>\n                    <div className=\"form-group\">\n                        <button>Login</button>\n                        <p className='note'>Forgot your password? <a href=\"#\">Reset it here</a></p>\n                    </div>\n                </form>\n            </div>\n\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { alert } = state;\n    return {\n        alert\n    };\n}\n\nexport const LoginPage = connect(mapStateToProps)(LoginPageComponent);","import React, { Component } from 'react';\n\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nimport { LoginPage } from './features/login/LoginPage';\n\n\nexport class App extends Component {\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"col-4 offset-4\">\n                    <LoginPage/>\n                </div>\n            </div>\n        )\n    }\n}\n\n","import { userConstants } from '../action/user.action';\n\nlet user = JSON.parse(localStorage.getItem('user'));\nconst initialState = user ? { loggedIn: true, user } : {};\n\nexport function authentication(state = initialState, action) {\n    switch (action.type) {\n        case userConstants.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_SUCCESS:\n            return {\n                loggedIn: true,\n                user: action.user\n            };\n        case userConstants.LOGIN_FAILURE:\n            return {};\n        case userConstants.LOGOUT:\n            return {};\n        default:\n            return state\n    }\n}","import {combineReducers} from 'redux';\n\nimport {alert} from \"./alert.reduser\";\nimport {authentication} from \"./auth.reducer\";\nimport {users} from \"./user.reducer\";\n\nexport const rootReducer = combineReducers({\n    alert: alert,\n    authentication: authentication,\n    users: users\n});","import { alertConstants } from '../action/alert.action';\n\nexport function alert(state = {}, action) {\n    switch (action.type) {\n        case alertConstants.SUCCESS:\n            return {\n                type: 'alert-success',\n                message: action.message\n            };\n        case alertConstants.ERROR:\n            return {\n                type: 'alert-danger',\n                message: action.message\n            };\n        case alertConstants.CLEAR:\n            return {};\n        default:\n            return state\n    }\n}","import { userConstants } from '../action/user.action';\n\nexport function users(state = {}, action) {\n    switch (action.type) {\n        case userConstants.GETALL_REQUEST:\n            return {\n                loading: true\n            };\n        case userConstants.GETALL_SUCCESS:\n            return {\n                items: action.users\n            };\n        case userConstants.GETALL_FAILURE:\n            return {\n                error: action.error\n            };\n        default:\n            return state\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nimport { rootReducer } from './reducers/root.reducer';\n\nconst loggerMiddleware = createLogger();\n\n\n//создаем мидлевары\n\nexport const store = createStore(\n    rootReducer,\n    applyMiddleware(\n        thunkMiddleware,\n        loggerMiddleware\n    )\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {Provider} from 'react-redux';\n\nimport {App} from './App';\nimport { store} from \"./store/store\";\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}